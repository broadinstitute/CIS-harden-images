name: API ZAP
on:
  schedule:
    - cron:  '0 0 1 3,6,9,12 *'
  push:
jobs:
  build:
    strategy:
      matrix:
        family: ['debian-9', 'centos-7']
    env:
      IMAGE_FAMILY: ${{ matrix.family }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: google-github-actions/setup-gcloud@master
        with:
          version: '290.0.1'
          project_id: ${{ secrets.GCSPROJECT }}
          service_account_key: ${{ secrets.GCLOUDSERVICEKEY }}
          export_default_credentials: true
      - name: get current source image
        id: source_image
        run: echo "::set-output name=SOURCE_IMAGE::$(gcloud compute images list --format='value(NAME)' --filter='family:${{ env.IMAGE_FAMILY }}')"
      - name: get most recent hardened image
        id: recent_image
        continue-on-error: true
        run: echo "::set-output name=RECENT_IMAGE::$(gcloud compute images list --format='value(NAME)' --sort-by='~creationTimestamp' --limit=1 --no-standard-images --filter='family:${{ env.IMAGE_FAMILY }}')"
      - run: gcloud compute images list --format='value(NAME)' --sort-by='~creationTimestamp' --limit=1 --no-standard-images --filter='family:debian-9'
      - run: echo ${{ steps.recent_image.outputs.RECENT_IMAGE }}
      - name: set image name
        id: image_name
        run: echo "::set-output name=IMAGE_NAME::$(echo 'dsp-appsec-cis-${{ steps.source_image.outputs.SOURCE_IMAGE }}')"
      - run: sed -e "s;%SOURCE_IMAGE%;$SOURCE_IMAGE;g" -e "s;%IMAGE_FAMILY%;$IMAGE_FAMILY;g" -e "s;%IMAGE_NAME%;$IMAGE_NAME;g" -e "s;%PRIOR_IMAGE%;$PRIOR_IMAGE;g" template.yaml > cloudbuild.yaml
        env:
          SOURCE_IMAGE: ${{ steps.source_image.outputs.SOURCE_IMAGE }}
          IMAGE_FAMILY: ${{ env.IMAGE_FAMILY }}
          IMAGE_NAME: ${{ steps.image_name.outputs.IMAGE_NAME }}
          PRIOR_IMAGE: ${{ steps.recent_image.outputs.RECENT_IMAGE }}
      - name: run cloudbuild
        if: ${{ steps.recent_image.outputs.RECENT_IMAGE != steps.image_name.outputs.IMAGE_NAME }}
        run: cat cloudbuild.yaml