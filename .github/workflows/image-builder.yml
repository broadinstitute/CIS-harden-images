name: API ZAP
on:
  schedule:
    - cron:  '0 0 1 3,6,9,12 *'
  push:
jobs:
  build:
    strategy:
      matrix:
        family: ['debian-9', 'centos-7']
    env:
      IMAGE_FAMILY: ${{ matrix.family }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: google-github-actions/setup-gcloud@master
        with:
          version: '290.0.1'
          project_id: ${{ secrets.GCSPROJECT }}
          service_account_key: ${{ secrets.GCLOUDSERVICEKEY }}
          export_default_credentials: true
      - name: get current source image
        id: source_image
        run: echo "::set-output name=SOURCE_IMAGE::$(gcloud compute images list --format='value(NAME)' --filter='family:${{ env.IMAGE_FAMILY }}')"
      - name: set image name
        id: image_name
        run: echo "::set-output name=IMAGE_NAME::$(echo 'dsp-appsec-cis-${{ steps.source_image.outputs.SOURCE_IMAGE }}')"
      - name: check if hardened image based on latest public image already exists
        id: image_exists
        run: echo "::set-output name=IMAGE_EXISTS::$(gcloud compute images list --filter='name:${{ steps.image_name.outputs.IMAGE_NAME }}' --format='value(NAME)')"
      - run: sed -e "s;%SOURCE_IMAGE%;${{ steps.source_image.outputs.SOURCE_IMAGE }};g" -e "s;%IMAGE_FAMILY%;${{ env.IMAGE_FAMILY }};g" -e "s;%SOURCE_IMAGE%;${{ steps.image_name.outputs.IMAGE_NAME }};g" template.yaml > cloudbuild.yaml
      - name: run cloudbuild
        if: ${{ steps.image_name.outputs.IMAGE_NAME == steps.image_exists.outputs.IMAGE_EXISTS }}
        run: cat cloudbuild.yaml